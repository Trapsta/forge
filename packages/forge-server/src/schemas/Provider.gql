interface Provider {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  creatorId: String!
  creator: User
  domain: String!
}

type GitHubPayload {
  userId: String!
  accessToken: String!
}

type GitHub implements Provider {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  creatorId: String!
  creator: User
  domain: String!
  payload: GitHubPayload!
}

type CustomPayload {
  username: String!
  password: String!
  email: String!
}

type Custom implements Provider {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  creatorId: String!
  creator: User
  domain: String!
  payload: CustomPayload!
}

type Payload {
  token: String!
  userId: String!
}

extend type Query {
  oauthGitHubUrl: String!
}

extend type Mutation {
  authCreateCustom(username: String!, password: String!, email: String!): Payload!
  authLoginCustom(username: String!, password: String!): Payload!
  authConnectGitHub(code: String!): Payload! @auth
  authLoginGitHub(code: String!): Payload!
}